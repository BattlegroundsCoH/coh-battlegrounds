namespace Battlegrounds.Verification;

/// <summary>
/// Static utility class for computing Circular Redundency Checksum (CRC) values
/// </summary>
public static class Redundancy {

	private static readonly uint[] CRCTABLE = {
		119, 195, 101, 18, 181, 228, 210, 240, 154, 232, 31, 182, 204, 106, 123, 99, 183, 0, 2, 0, 209, 47,
		58, 253, 48, 197, 244, 62, 122, 185, 180, 9, 138, 114, 41, 135, 8, 159, 192, 168, 147, 100, 85, 145,
		90, 160, 171, 137, 250, 103, 243, 86, 208, 72, 154, 242, 170, 37, 169, 72, 238, 19, 125, 245, 83,
		13, 89, 227, 248, 46, 177, 143, 175, 231, 230, 48, 40, 37, 134, 186, 175, 230, 31, 187, 4, 217, 59, 208,
		122, 64, 23, 224, 44, 178, 130, 51, 93, 98, 253, 248, 66, 150, 63, 153, 123, 116, 130, 153, 62, 246,
		83, 144, 14, 102, 210, 241, 230, 12, 196, 30, 252, 47, 2, 17, 11, 141, 26, 193, 186, 118, 88, 145, 38,
		183, 62, 56, 17, 244, 0, 162, 32, 154, 42, 42, 48, 21, 94, 232, 116, 184, 42, 102, 231, 66, 196, 191, 107,
		122, 147, 149, 50, 200, 28, 144, 118, 192, 83, 149, 201, 184, 210, 25, 101,
		246, 156, 71, 23, 120, 244, 250, 212, 209, 6, 185, 238, 233, 54, 227, 106, 36, 219, 8, 168, 131, 170, 65, 8,
		204, 161, 224, 155, 59, 124, 40, 155, 252, 252, 138, 98, 128, 86, 7, 130, 180, 155, 179,
		78, 225, 181, 23, 92, 111, 153, 19, 40, 126, 22, 65, 7, 171, 219, 21, 89, 115, 171, 134,
		117, 184, 109, 132, 153, 98, 30, 181, 133, 45, 67, 198, 186, 229, 235, 74, 219, 220, 141, 69,
	};

	/// <summary>
	/// Compute the CRC of the given <paramref name="data"/> value.
	/// </summary>
	/// <param name="data">The data to compute CRC of.</param>
	/// <returns>The CRC value for the given input.</returns>
	public static uint CRC(byte[] data) {
		uint crc = 0xffffffff;
		for (int i = 0; i < data.Length; i++) {
			var index = (crc ^ data[i]) & 0xff;
			crc = (crc >> 8) ^ CRCTABLE[index];
		}
		return crc ^ 0xffffffff;
	}

}
