<Application x:Class="BattlegroundsApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BattlegroundsApp"
             xmlns:hostGame="clr-namespace:BattlegroundsApp.Dialogs.HostGame"
             xmlns:yesNo="clr-namespace:BattlegroundsApp.Dialogs.YesNo"
             xmlns:lobbypwd="clr-namespace:BattlegroundsApp.Dialogs.LobbyPassword"
             xmlns:ok="clr-namespace:BattlegroundsApp.Dialogs.OK"
             xmlns:createCompany="clr-namespace:BattlegroundsApp.Dialogs.CreateCompany"
             xmlns:importExport="clr-namespace:BattlegroundsApp.Dialogs.ImportExport"
             xmlns:renameCopy="clr-namespace:BattlegroundsApp.Dialogs.RenameCopyDialog"
             xmlns:newCampaign="clr-namespace:BattlegroundsApp.Dialogs.NewCampaign"
             xmlns:addUnit="clr-namespace:BattlegroundsApp.Dialogs.AddUnit"
             xmlns:campaignModels="clr-namespace:BattlegroundsApp.Views.CampaignViews.Models"
             xmlns:campaignViews="clr-namespace:BattlegroundsApp.Views.CampaignViews"
             xmlns:views="clr-namespace:BattlegroundsApp.MVVM.Views"
             xmlns:models="clr-namespace:BattlegroundsApp.MVVM.Models"
             xmlns:lobbyviews="clr-namespace:BattlegroundsApp.Lobby.MVVM.Views"
             xmlns:lobbymodels="clr-namespace:BattlegroundsApp.Lobby.MVVM.Models"
             xmlns:controls="clr-namespace:BattlegroundsApp.Controls"
             Startup="App_Startup"
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <DataTemplate DataType="{x:Type hostGame:HostGameDialogViewModel}">
            <hostGame:HostGameDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type yesNo:YesNoDialogViewModel}">
            <yesNo:YesNoDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type lobbypwd:LobbyPasswordDialogViewModel}">
            <lobbypwd:LobbyPasswordDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type ok:OKDialogViewModel}">
            <ok:OKDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type createCompany:CreateCompanyDialogViewModel}">
            <createCompany:CreateCompanyDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type importExport:ImportExportDialogViewModel}">
            <importExport:ImportExportDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type renameCopy:RenameCopyDialogViewModel}">
            <renameCopy:RenameCopyDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type newCampaign:NewCampaignDialogViewModel}">
            <newCampaign:NewCampaignDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type addUnit:AddUnitDialogViewModel}">
            <addUnit:AddUnitDilaogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignModelSelectionViewModel}">
            <campaignViews:CampaignModelSelectionView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignObjectiveModel}">
            <campaignViews:CampaignObjectiveView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignUnitReserveModel}">
            <campaignViews:CampaignUnitReserveView/>
        </DataTemplate>

        <!-- New Lobby-View Models -->
        <DataTemplate DataType="{x:Type models:LeftMenu}">
            <views:LeftMenuView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type models:LobbyBrowserViewModel}">
            <views:LobbyBrowserView/>
        </DataTemplate>

        <!-- New CompanyBrowser-View Models -->
        <DataTemplate DataType="{x:Type models:CompanyBrowserViewModel}">
            <views:CompanyBrowserView/>
        </DataTemplate>
        

        <!-- Lobby View Models -->
        <DataTemplate DataType="{x:Type lobbymodels:LobbyChatSpectatorModel}">
            <lobbyviews:LobbyChatSpectatorView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type lobbymodels:LobbyModel}">
            <lobbyviews:LobbyView/>
        </DataTemplate>

        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Foreground" Value="#999ea4"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"/>                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#ffffff"/>
                                <Setter Property="FontWeight" Value="Regular"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonSeperator" TargetType="{x:Type Separator}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Background" Value="#4a545f"/>
            <Setter Property="Width" Value="105"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
        </Style>

        <Style x:Key="ButtonVerticalSeperator" TargetType="{x:Type Separator}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Background" Value="#4a545f"/>
            <Setter Property="Width" Value="105"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardBlueButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Gridbackground" Background="#334252">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Gridbackground" Property="Background" Value="#536375"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardBlueDropdownScrollbarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid Width="18" Background="#212d3a">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="StandardBlueDropdownScrollbarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardBlueDropdownScrollbar" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid Width="18" Background="#212d3a">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="18"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Row="0"
                                          Command="ScrollBar.LineUpCommand"
                                          Content="ᐃ"
                                          Foreground="#FFFFFF"
                                          Style="{StaticResource StandardBlueDropdownScrollbarButton}"/>
                            <Track Grid.Row="1"
                                   IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource StandardBlueDropdownScrollbarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource {x:Type Thumb}}">
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="IsTabStop" Value="false" />
                                                <Setter Property="Focusable" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border CornerRadius="1"
                                                                    Background="#334252"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource StandardBlueDropdownScrollbarPageButton}" Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Row="2"
                                          Command="ScrollBar.LineDownCommand"
                                          Content="ᐁ"
                                          Foreground="#FFFFFF"
                                          Style="{StaticResource StandardBlueDropdownScrollbarButton}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardBlueDropdownScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                    CanHorizontallyScroll="False" CanVerticallyScroll="True" 
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                    Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar 
                                Style="{StaticResource StandardBlueDropdownScrollbar}" 
                                x:Name="PART_VerticalScrollBar" 
                                AutomationProperties.AutomationId="VerticalScrollBar" 
                                Cursor="Arrow" 
                                Grid.Column="1" 
                                Maximum="{TemplateBinding ScrollableHeight}" 
                                Minimum="0" 
                                Grid.Row="0"
                                Orientation="Vertical"
                                SmallChange="5"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                ViewportSize="{TemplateBinding ViewportHeight}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StandardBlueDropdownItemContainer" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#536375"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Container" Margin="2,0,0,0" BorderBrush="Transparent" Height="24">
                            <TextBlock Text="{Binding}"
                                        FontSize="12"
                                        FontFamily="Open Sans"
                                        Foreground="#FFFFFF"
                                        VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Container" Property="Background" Value="#334252"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Container" Property="Background" Value="#273441"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="StandardBlueDropdown" TargetType="{x:Type ComboBox}">
            <Setter Property="IsEditable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource StandardBlueDropdownItemContainer}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <ResourceDictionary x:Name="LobbyIcons" Source="pack://application:,,,/coh2-battlegrounds;component/Resources/app/LobbyIcons.xaml"/>
                        </ControlTemplate.Resources>
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable"/>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <controls:IconToggleButton
                                x:Name="ToggleButton"
                                Background="#334252"
                                Foreground="#FFFFFF"
                                HoverColour="#536375"
                                HorizontalContentAlignment="Left"
                                ImageSource="{StaticResource ArrowDropdownDrawingImage}"
                                ImageHeight="20"
                                ImageWidth="20"
                                IsToggled="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter x:Name="ContentSite" 
                                                  Content="{TemplateBinding SelectedItem}"/>
                            </controls:IconToggleButton>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide"
                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                   MaxHeight="170">
                                <Border Background="#536375" BorderBrush="#212d3a" BorderThickness="1">
                                    <ScrollViewer Background="#536375" Style="{StaticResource StandardBlueDropdownScrollViewer}">
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>                                
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
