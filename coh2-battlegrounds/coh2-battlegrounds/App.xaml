<Application x:Class="BattlegroundsApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BattlegroundsApp"
             xmlns:hostGame="clr-namespace:BattlegroundsApp.Dialogs.HostGame"
             xmlns:yesNo="clr-namespace:BattlegroundsApp.Dialogs.YesNo"
             xmlns:lobbypwd="clr-namespace:BattlegroundsApp.Dialogs.LobbyPassword"
             xmlns:ok="clr-namespace:BattlegroundsApp.Dialogs.OK"
             xmlns:createCompany="clr-namespace:BattlegroundsApp.Dialogs.CreateCompany"
             xmlns:importExport="clr-namespace:BattlegroundsApp.Dialogs.ImportExport"
             xmlns:renameCopy="clr-namespace:BattlegroundsApp.Dialogs.RenameCopyDialog"
             xmlns:newCampaign="clr-namespace:BattlegroundsApp.Dialogs.NewCampaign"
             xmlns:addUnit="clr-namespace:BattlegroundsApp.Dialogs.AddUnit"
             xmlns:campaignModels="clr-namespace:BattlegroundsApp.Views.CampaignViews.Models"
             xmlns:campaignViews="clr-namespace:BattlegroundsApp.Views.CampaignViews"
             xmlns:views="clr-namespace:BattlegroundsApp.MVVM.Views"
             xmlns:models="clr-namespace:BattlegroundsApp.MVVM.Models"
             xmlns:lobbyviews="clr-namespace:BattlegroundsApp.Lobby.MVVM.Views"
             xmlns:lobbymodels="clr-namespace:BattlegroundsApp.Lobby.MVVM.Models"
             xmlns:controls="clr-namespace:BattlegroundsApp.Controls"
             Startup="App_Startup"
             ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <DataTemplate DataType="{x:Type hostGame:HostGameDialogViewModel}">
            <hostGame:HostGameDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type yesNo:YesNoDialogViewModel}">
            <yesNo:YesNoDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type lobbypwd:LobbyPasswordDialogViewModel}">
            <lobbypwd:LobbyPasswordDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type ok:OKDialogViewModel}">
            <ok:OKDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type createCompany:CreateCompanyDialogViewModel}">
            <createCompany:CreateCompanyDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type importExport:ImportExportDialogViewModel}">
            <importExport:ImportExportDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type renameCopy:RenameCopyDialogViewModel}">
            <renameCopy:RenameCopyDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type newCampaign:NewCampaignDialogViewModel}">
            <newCampaign:NewCampaignDialogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type addUnit:AddUnitDialogViewModel}">
            <addUnit:AddUnitDilaogView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignModelSelectionViewModel}">
            <campaignViews:CampaignModelSelectionView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignObjectiveModel}">
            <campaignViews:CampaignObjectiveView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type campaignModels:CampaignUnitReserveModel}">
            <campaignViews:CampaignUnitReserveView/>
        </DataTemplate>

        <!-- New Lobby-View Models -->
        <DataTemplate DataType="{x:Type models:LeftMenu}">
            <views:LeftMenuView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type models:LobbyBrowserViewModel}">
            <views:LobbyBrowserView/>
        </DataTemplate>
        
        <!-- Lobby View Models -->
        <DataTemplate DataType="{x:Type lobbymodels:LobbyChatSpectatorModel}">
            <lobbyviews:LobbyChatSpectatorView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type lobbymodels:LobbyModel}">
            <lobbyviews:LobbyView/>
        </DataTemplate>

        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontFamily" Value="Open Sans"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Foreground" Value="#999ea4"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center"/>                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#ffffff"/>
                                <Setter Property="FontWeight" Value="Regular"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.65"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonSeperator" TargetType="{x:Type Separator}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Background" Value="#4a545f"/>
            <Setter Property="Width" Value="105"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
        </Style>

        <Style x:Key="ButtonVerticalSeperator" TargetType="{x:Type Separator}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Background" Value="#4a545f"/>
            <Setter Property="Width" Value="105"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
