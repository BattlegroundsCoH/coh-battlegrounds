@using Battlegrounds.App.Providers.Lobby
@using Battlegrounds.Core.Lobbies

<style>
    .settings-item {
        margin-bottom: 20px;
    }

    .settings-key {
        font-weight: bold;
    }

    .settings-select, .settings-checkbox, .settings-slider {
        margin-top: 5px;
        display: block;
    }

    .settings-value {
        font-size: 16px;
        color: #666;
    }
</style>

<div class="settings-item">
    @if (Lobby?.Settings.TryGetValue(this.Key ?? string.Empty, out string? val) ?? false) {
        <div class="settings-key">@Key:</div>
        @if (Lobby.IsHost) {
            @switch (ValueProvider) {
                case OptionsProvider options:
                    <select class="settings-select" @bind="Value">
                        @foreach (var (value, text) in options.Values) {
                            <option value="@value">@text</option>
                        }
                    </select>
                    break;
                case ToggleProvider:
                    <input type="checkbox" class="settings-checkbox" @bind="Value" />
                    break;
                case RangeProvider range:
                    <input type="range" class="settings-slider" min="@range.Min" max="@range.Max" @bind="Value" />
                    break;
                default:
                    <div class="settings-display">@Value</div>
                    break;
            }
        } else {
            <p class="settings-value">@val</p>
        }
    }
</div>

@code {

    [Parameter] public string? Key { get; set; }
    [Parameter] public ISkirmishSettingsValueProvider? ValueProvider { get; set; } = null;
    [Parameter] public ILobby? Lobby { get; set; }

    public string? Value {
        get => Lobby!.Settings[Key!];
        set {
            Task.Run(() => {
                Lobby!.SetSetting(Key!, value ?? string.Empty);
            });
        }
    }

}
