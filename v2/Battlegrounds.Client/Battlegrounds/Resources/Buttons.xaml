<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- TransparentButton Style -->
    <Style x:Key="TransparentButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NavigationButton Style -->
    <Style x:Key="NavigationButton" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource BackgroundBlueBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundWhiteBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <!-- Indicator Bar -->
                        <Border x:Name="IndicatorBar" 
                            Width="4" 
                            HorizontalAlignment="Left"
                            CornerRadius="2"
                            Background="{DynamicResource AccentBlueBrush}"
                            Opacity="0"/>

                        <!-- Main Button Content -->
                        <Border x:Name="MainBorder" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="4,0,0,0"
                            CornerRadius="6">

                            <ContentPresenter x:Name="ContentPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundLightBlueBrush}"/>
                            <Setter TargetName="IndicatorBar" Property="Opacity" Value="0.6"/>
                        </Trigger>

                        <!-- Pressed State -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundDarkBlueBrush}"/>
                            <Setter TargetName="IndicatorBar" Property="Opacity" Value="1"/>
                        </Trigger>

                        <!-- Selected/Active State (if using IsChecked) -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundLightBlueBrush}"/>
                            <Setter TargetName="IndicatorBar" Property="Opacity" Value="1"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBlueBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundWhiteBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="12,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource BackgroundLightBlueBrush}"
                        BorderThickness="1"
                        CornerRadius="4">
                        <ContentPresenter x:Name="ContentPresenter" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ForegroundLightBlueBrush}"/>
                        </Trigger>

                        <!-- Pressed State -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BackgroundLightBlueBrush}"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DangerActionButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentRedBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundWhiteBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="12,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource BackgroundLightBlueBrush}"
                        BorderThickness="1"
                        CornerRadius="4">
                        <ContentPresenter x:Name="ContentPresenter" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource ForegroundDarkRedBrush}"/>
                        </Trigger>

                        <!-- Pressed State -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BackgroundLighRedBrush}"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- BackButton Style for LobbyView -->
    <Style x:Key="BackButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundWhiteBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                Background="{DynamicResource BackgroundBlueBrush}"
                BorderBrush="{DynamicResource BackgroundLightBlueBrush}"
                BorderThickness="1"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Back Arrow Icon -->
                            <Path x:Name="ArrowIcon"
                      Data="M 0,8 L 8,0 L 8,4 L 18,4 L 18,12 L 8,12 L 8,16 Z"
                      Fill="{DynamicResource ForegroundLightBlueBrush}"
                      Stretch="Uniform"
                      Width="16"
                      Height="16"
                      VerticalAlignment="Center"/>

                            <!-- Text Content -->
                            <TextBlock Grid.Column="1"
                           Text="Go Back"
                           Margin="8,0,0,0"
                           VerticalAlignment="Center"
                           Foreground="{DynamicResource ForegroundWhiteBrush}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover state -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BackgroundLightBlueBrush}"/>
                            <Setter TargetName="ArrowIcon" Property="Fill" Value="{DynamicResource ForegroundWhiteBrush}"/>
                        </Trigger>

                        <!-- Pressed state -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BackgroundDarkBlueBrush}"/>
                        </Trigger>

                        <!-- Disabled state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>