<UserControl x:Class="Battlegrounds.Views.LobbyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Battlegrounds.Views"
             xmlns:viewmodels="clr-namespace:Battlegrounds.ViewModels"
             xmlns:converters="clr-namespace:Battlegrounds.Converters"
             xmlns:selectors="clr-namespace:Battlegrounds.Selectors"
             d:DataContext="{d:DesignInstance Type=viewmodels:LobbyViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1280">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InvertedBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:LockImageConverter x:Key="LockImageConverter"/>
        <converters:LockStateConverter x:Key="LockStateConverter"/>
        <converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
        <converters:MathConverter x:Key="MathConverter"/>
        <converters:MatchButtonStateConverter x:Key="MatchButtonStateConverter"/>
        <converters:ButtonStateToContentConverter x:Key="ButtonStateToContentConverter"/>
        <converters:FactionIconMultiBindingConverter x:Key="FactionIconConverter"/>

        <DataTemplate x:Key="CompanyComboBoxItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Faction icon -->
                <Image Width="20" Height="20" Margin="0,0,8,0"
               Source="{Binding Company.Faction, Converter={StaticResource FactionIconConverter}, ConverterParameter=CoH3}"
               Visibility="{Binding Company, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>

                <!-- Company name -->
                <TextBlock Grid.Column="1" 
                   Text="{Binding Company.Name, FallbackValue='None', TargetNullValue='Random AI Company'}"
                   VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="CompanySelectionComboBox" TargetType="ComboBox" BasedOn="{StaticResource SettingsComboBox}">
            <Setter Property="ItemTemplate" Value="{StaticResource CompanyComboBoxItemTemplate}"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style x:Key="Slot" TargetType="{x:Type ContentControl}">
            <Style.Setters>
                <Setter Property="Height" Value="60"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightBlueBrush}"/>
                <Setter Property="Background" Value="{StaticResource BackgroundBlueBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Visibility="{Binding Slot.Hidden, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                    CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Player Icon/Avatar -->
                                    <Ellipse Width="40" Height="40" Margin="10,0,0,0" Grid.Column="0" VerticalAlignment="Center">
                                        <Ellipse.Fill>
                                            <ImageBrush 
                                                ImageSource="pack://application:,,,/Battlegrounds;component/Assets/dummy_avatar.png"/>
                                        </Ellipse.Fill>
                                    </Ellipse>

                                    <!-- Player Name -->
                                    <TextBlock Text="{Binding DisplayName}" 
                                               Grid.Column="1"
                                               FontWeight="SemiBold"
                                               Margin="10,0,0,0"
                                               VerticalAlignment="Center"
                                               Foreground="{StaticResource ForegroundWhiteBrush}"/>
                                    
                                    <!-- Company Selection -->
                                    <Grid
                                        Grid.Column="2">
                                        
                                        <!-- Company selection -->
                                        <ComboBox
                                                   Width="220" Height="42"
                                                   ItemsSource="{Binding AvailableCompanies}"
                                                   SelectedItem="{Binding SelectedCompany, Mode=TwoWay}"
                                                   Style="{StaticResource SettingsComboBox}"
                                                   Visibility="{Binding CanSetCompany, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <!-- Faction icon -->
                                                        <Image Width="32" Height="32" Margin="0,0,8,0">
                                                            <Image.Source>
                                                                <MultiBinding Converter="{StaticResource FactionIconConverter}">
                                                                    <Binding Path="Company.Faction"/>
                                                                    <Binding Path="Company.GameId"/>
                                                                </MultiBinding>
                                                            </Image.Source>
                                                        </Image>

                                                        <!-- Company name -->
                                                        <TextBlock Grid.Column="1" 
                                                            Text="{Binding DisplayName}"
                                                            VerticalAlignment="Center"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <!-- Selected company -->
                                        <TextBlock Text="{Binding DisplayName}"
                                                   FontWeight="SemiBold"
                                                   Margin="10,0,0,0"
                                                   Visibility="{Binding CanSetCompany, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                                   Foreground="{StaticResource ForegroundGrayBrush}"/>


                                    </Grid>
                                    
                                    <!-- Controls (Lock/Unlock, AI Options) -->
                                    <StackPanel Grid.Column="3" 
                                            Orientation="Horizontal" 
                                            Margin="0,0,10,0"
                                            Visibility="{Binding ParentContext.IsHost, Converter={StaticResource BoolToVisibilityConverter}}">

                                        <!-- AI Difficulty ComboBox (shown only when adding an AI) -->
                                        <ComboBox Width="160" Height="42"
                                                  Margin="10,0,0,0"
                                                    ItemsSource="{Binding AvailableAIDifficulties}"
                                                  SelectedItem="{Binding SelectedAIDifficulty, Mode=TwoWay}"
                                                  DisplayMemberPath="DisplayName"
                                                  Style="{StaticResource SettingsComboBox}"
                                                  Visibility="{Binding CanSetAIDifficulty, Converter={StaticResource BoolToVisibilityConverter}}"/>


                                        <!-- Lock/Unlock Button (shown only if slot is unoccupied) -->
                                        <Button Width="30" Height="42" 
                                            Margin="5,0"
                                            ToolTip="{Binding Slot.Locked, Converter={StaticResource LockStateConverter}}"
                                            Command="{Binding LockUnlockCommand}"
                                            CommandParameter="{Binding Slot.Index}"
                                            Visibility="{Binding DisplayName, Converter={StaticResource EmptyStringToVisibilityConverter}}">
                                            <Image 
                                                Source="{Binding Slot.Locked, Converter={StaticResource LockImageConverter}}"/>
                                        </Button>

                                    </StackPanel>

                                    <!-- Stylise when working on multiplayer
                                    <Button
                                        Grid.Column="4"
                                        Content="X"
                                        Width="28"
                                        Height="42"
                                        Margin="0,0,8,0"
                                        Visibility="{Binding CanKickOccupant, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                        -->
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <DataTemplate x:Key="BooleanSettingTemplate">
            <CheckBox Content="{Binding Name}"
             IsChecked="{Binding BoolValue, Mode=TwoWay}"
             Foreground="{StaticResource ForegroundWhiteBrush}"
             IsEnabled="{Binding DataContext.IsHost, RelativeSource={RelativeSource AncestorType=UserControl}}"
             Margin="0,5"/>
        </DataTemplate>

        <DataTemplate x:Key="IntegerSettingTemplate">
            <Grid Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding Name}"
                 Foreground="{StaticResource ForegroundWhiteBrush}"
                 Grid.Column="0" Grid.Row="0"/>

                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
                    <TextBlock Text="{Binding IntValue}"
                     Foreground="{StaticResource ForegroundLightBlueBrush}"
                     Margin="5,0,0,0"/>
                </StackPanel>

                <Slider Grid.Row="1" Grid.ColumnSpan="2"
               Minimum="{Binding MinValue}"
               Maximum="{Binding MaxValue}"
               Value="{Binding IntValue, Mode=TwoWay}"
               IsSnapToTickEnabled="True"
               TickFrequency="{Binding Step}"
               IsEnabled="{Binding DataContext.IsHost, RelativeSource={RelativeSource AncestorType=UserControl}}"
               Margin="0,5,0,0"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SelectionSettingTemplate">
            <Grid Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding Name}"
                 Foreground="{StaticResource ForegroundWhiteBrush}"
                 VerticalAlignment="Center"/>

                <Grid Grid.Column="1">
                    <!-- For host: editable combo box -->
                    <ComboBox
                ItemsSource="{Binding Options}"
                DisplayMemberPath="Name"
                SelectedIndex="{Binding SelectedOptionIndex, Mode=TwoWay}"
                Width="150"
                        Style="{StaticResource SettingsComboBox}"
                Visibility="{Binding DataContext.IsHost, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <!-- For non-host: read-only text -->
                    <TextBlock 
                Text="{Binding SelectedOption.Name}"
                Foreground="{StaticResource ForegroundGrayBrush}"
                VerticalAlignment="Center"
                Visibility="{Binding DataContext.IsHost, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <selectors:SettingTemplateSelector x:Key="SettingTemplateSelector"
            BooleanSettingTemplate="{StaticResource BooleanSettingTemplate}"
            IntegerSettingTemplate="{StaticResource IntegerSettingTemplate}"
            SelectionSettingTemplate="{StaticResource SelectionSettingTemplate}"/>


        <!-- StartMatchButton Style -->
        <Style x:Key="StartMatchButton" TargetType="Button">
            <Setter Property="Width" Value="280"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid">
                            <!-- Animated pulse border for Starting state -->
                            <Border x:Name="PulseBorder" 
                            BorderThickness="2" 
                            CornerRadius="4"
                            BorderBrush="#00FFFFFF"
                            Opacity="0"
                            Margin="-4"/>

                            <!-- Main button border -->
                            <Border x:Name="MainBorder" 
                           Background="{StaticResource BackgroundBlueBrush}"
                           BorderBrush="{StaticResource BackgroundLightBlueBrush}"
                           BorderThickness="1"
                           CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Content -->
                                    <ContentPresenter x:Name="ContentPresenter" 
                                         HorizontalAlignment="Center" 
                                         VerticalAlignment="Center"
                                         Grid.ColumnSpan="2"/>

                                    <!-- Animated dots for waiting state -->
                                    <StackPanel x:Name="WaitingDots" 
                                       Orientation="Horizontal" 
                                       HorizontalAlignment="Right" 
                                       Grid.Column="1"
                                       Margin="0,0,20,0"
                                       Opacity="0">
                                        <Ellipse x:Name="Dot1" Width="6" Height="6" Fill="{StaticResource ForegroundWhiteBrush}" Margin="3,0"/>
                                        <Ellipse x:Name="Dot2" Width="6" Height="6" Fill="{StaticResource ForegroundWhiteBrush}" Margin="3,0"/>
                                        <Ellipse x:Name="Dot3" Width="6" Height="6" Fill="{StaticResource ForegroundWhiteBrush}" Margin="3,0"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- CanStart state - Green color -->
                            <Trigger Property="Tag" Value="CanStart">
                                <Setter Property="Background" TargetName="MainBorder" Value="#4CAF50"/>
                                <Setter Property="BorderBrush" TargetName="MainBorder" Value="#66BB6A"/>
                                <Setter Property="IsEnabled" Value="True"/>
                            </Trigger>

                            <!-- CannotStart state -->
                            <Trigger Property="Tag" Value="CannotStart">
                                <Setter Property="Background" TargetName="MainBorder" Value="{StaticResource BackgroundDarkBlueBrush}"/>
                                <Setter Property="Opacity" Value="0.7"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>

                            <!-- Starting state with pulse animation -->
                            <Trigger Property="Tag" Value="Starting">
                                <Setter Property="Background" TargetName="MainBorder" Value="#FFC107"/>
                                <Setter Property="BorderBrush" TargetName="MainBorder" Value="#FFD54F"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Visibility" TargetName="PulseBorder" Value="Visible"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <!-- Pulse border animation -->
                                            <ColorAnimation 
                                        Storyboard.TargetName="PulseBorder" 
                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="#00FFD54F" To="#FFFFD54F" Duration="0:0:0.75" 
                                        AutoReverse="True"/>
                                            <DoubleAnimation 
                                        Storyboard.TargetName="PulseBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:0.75"
                                        AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>

                            <!-- Waiting state with dots animation -->
                            <Trigger Property="Tag" Value="Waiting">
                                <Setter Property="Background" TargetName="MainBorder" Value="{StaticResource AccentRedBrush}"/>
                                <Setter Property="BorderBrush" TargetName="MainBorder" Value="#E57373"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Visibility" TargetName="WaitingDots" Value="Visible"/>
                                <Setter Property="Opacity" TargetName="WaitingDots" Value="1"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <!-- Dot 1 animation -->
                                            <DoubleAnimation 
                                        Storyboard.TargetName="Dot1" 
                                        Storyboard.TargetProperty="Opacity"
                                        From="1.0" To="0.3" Duration="0:0:0.6" 
                                        AutoReverse="True"
                                        BeginTime="0:0:0.0"/>
                                            <!-- Dot 2 animation -->
                                            <DoubleAnimation 
                                        Storyboard.TargetName="Dot2" 
                                        Storyboard.TargetProperty="Opacity"
                                        From="1.0" To="0.3" Duration="0:0:0.6" 
                                        AutoReverse="True"
                                        BeginTime="0:0:0.2"/>
                                            <!-- Dot 3 animation -->
                                            <DoubleAnimation 
                                        Storyboard.TargetName="Dot3" 
                                        Storyboard.TargetProperty="Opacity"
                                        From="1.0" To="0.3" Duration="0:0:0.6" 
                                        AutoReverse="True"
                                        BeginTime="0:0:0.4"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>

                            <!-- Hover state for CanStart -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Tag" Value="CanStart"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="MainBorder" Value="#66BB6A"/>
                            </MultiTrigger>

                            <!-- Pressed state for CanStart -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition Property="Tag" Value="CanStart"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="MainBorder" Value="#43A047"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- BackButton Style for LobbyView -->
        <Style x:Key="BackButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundWhiteBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="MainBorder"
                        Background="{StaticResource BackgroundBlueBrush}"
                        BorderBrush="{StaticResource BackgroundLightBlueBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Back Arrow Icon -->
                                <Path x:Name="ArrowIcon"
                              Data="M 0,8 L 8,0 L 8,4 L 18,4 L 18,12 L 8,12 L 8,16 Z"
                              Fill="{StaticResource ForegroundLightBlueBrush}"
                              Stretch="Uniform"
                              Width="16"
                              Height="16"
                              VerticalAlignment="Center"/>

                                <!-- Text Content -->
                                <TextBlock Grid.Column="1"
                                   Text="Go Back"
                                   Margin="8,0,0,0"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource ForegroundWhiteBrush}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover state -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BackgroundLightBlueBrush}"/>
                                <Setter TargetName="ArrowIcon" Property="Fill" Value="{StaticResource ForegroundWhiteBrush}"/>
                            </Trigger>

                            <!-- Pressed state -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BackgroundDarkBlueBrush}"/>
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainBorder" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ChatMessageTemplate">
            <StackPanel Orientation="Horizontal" Margin="0,2">
                <!-- The sender name with accent color -->
                <TextBlock Text="{Binding FormattedTimestamp}" 
                 Foreground="{StaticResource ForegroundWhiteBrush}"
                 FontWeight="SemiBold"/>

                <!-- The sender name with accent color -->
                <TextBlock Text="{Binding FormattedChannel}" 
                 Foreground="{Binding ChannelColour}"
                 FontWeight="SemiBold"
                           Margin="4,0,0,0"/>

                <!-- The sender name with accent color -->
                <TextBlock Text="{Binding FormattedSender}" 
                 Foreground="{Binding SenderColour}"
                 FontWeight="SemiBold"
                           Margin="4,0,0,0"/>

                <!-- The message content -->
                <TextBlock Text="{Binding Message}" 
                 Foreground="{StaticResource ForegroundWhiteBrush}"
                 TextWrapping="Wrap"
                           Margin="4,0,0,0"/>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>
    
    <Grid> <!-- No need for margin, outer container already has one -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Header -->
            <RowDefinition Height="*"/>    <!-- Main Content -->
            <RowDefinition Height="Auto"/> <!-- Footer -->
        </Grid.RowDefinitions>

        <!-- Header with Lobby Name and Back Button -->
        <Grid Grid.Row="0" Margin="0,0,0,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Content="← Go Back" 
                    Style="{StaticResource BackButton}"
                    Command="{Binding LeaveCommand}"/>

            <TextBlock Grid.Column="1"
                       Text="{Binding LobbyName}" 
                       FontSize="24" 
                       FontWeight="Bold"
                       Foreground="{StaticResource ForegroundWhiteBrush}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
        </Grid>

        <!-- Main Content Area -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>    <!-- Teams Area -->
                <ColumnDefinition Width="300"/>  <!-- Right Panel -->
            </Grid.ColumnDefinitions>

            <!-- Left Side - Teams and Chat -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>    <!-- Teams -->
                    <RowDefinition Height="250"/>  <!-- Chat -->
                </Grid.RowDefinitions>

                <!-- Teams Section -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Team Labels -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="TEAM 1" 
                                 FontSize="20" 
                                 FontWeight="Bold"
                                 Foreground="{StaticResource ForegroundWhiteBrush}"
                                 HorizontalAlignment="Center"/>

                        <TextBlock Grid.Column="1" 
                                 Text="VS" 
                                 FontSize="24"
                                 Margin="20,0"
                                 Foreground="{StaticResource AccentBlueBrush}"
                                 FontWeight="Bold"/>

                        <TextBlock Grid.Column="2" 
                                 Text="TEAM 2" 
                                 FontSize="20"
                                 FontWeight="Bold"
                                 Foreground="{StaticResource ForegroundWhiteBrush}"
                                 HorizontalAlignment="Center"/>
                    </Grid>

                    <!-- Team Slots -->
                    <Grid Grid.Row="1" Margin="0,20,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/> <!-- Spacing -->
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Team 1 Slots -->
                        <ItemsControl ItemsSource="{Binding Team1Slots}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Style="{StaticResource Slot}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- Team 2 Slots -->
                        <ItemsControl Grid.Column="2" ItemsSource="{Binding Team2Slots}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Style="{StaticResource Slot}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Grid>

                <!-- Chat Section -->
                <Border Grid.Row="1" 
                        Margin="0,20,0,0"
                        Background="{StaticResource BackgroundBlueBrush}"
                        BorderBrush="{StaticResource BackgroundLightBlueBrush}"
                        BorderThickness="1"
                        CornerRadius="8">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Chat Messages -->
                        <ScrollViewer Style="{StaticResource ChatScrollViewer}">
                            <ItemsControl 
                                ItemsSource="{Binding ChatMessages}" 
                                ItemTemplate="{StaticResource ChatMessageTemplate}">
                            </ItemsControl>
                        </ScrollViewer>

                        <!-- Chat Input -->
                        <Grid Grid.Row="1" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox 
                                Text="{Binding ChatMessage, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource ChatTextBox}"/>
                            <ComboBox
                                Width="130"
                                Height="30"
                                Grid.Column="1"
                                Style="{StaticResource SettingsComboBox}"
                                ItemsSource="{Binding AvailableChatChannels}"
                                DisplayMemberPath="DisplayName"
                                SelectedItem="{Binding SelectedChatChannel, Mode=TwoWay}"
                                />
                            <Button Grid.Column="2" 
                                    Style="{StaticResource ActionButton}"
                                    Content="Send"
                                    Margin="10,0,0,0"
                                    IsDefault="True"
                                    Command="{Binding SendMessageCommand}"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>

            <!-- Right Side - Map and Settings -->
            <Border Grid.Column="1" 
                    Margin="20,0,0,0"
                    Background="{StaticResource BackgroundBlueBrush}"
                    BorderBrush="{StaticResource BackgroundLightBlueBrush}"
                    BorderThickness="1"
                    CornerRadius="8">
                <Grid Margin="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="200"/> <!-- Map Preview -->
                        <RowDefinition Height="*"/>   <!-- Settings -->
                    </Grid.RowDefinitions>

                    <TextBlock Text="MATCH SETTINGS"
                             FontSize="18"
                             FontWeight="Bold"
                             Foreground="{StaticResource ForegroundWhiteBrush}"
                             Margin="0,0,0,15"/>

                    <!-- Map Preview -->
                    <Border Grid.Row="1"
                            Background="{StaticResource BackgroundDarkBlueBrush}"
                            CornerRadius="4">
                        <Image Source="{Binding SelectedMapPreview, FallbackValue='Assets/Scenarios/CoH3/pachino_2p_mm_handmade.png'}"
                               Stretch="UniformToFill"/>
                    </Border>

                    <!-- Settings List -->
                    <StackPanel Grid.Row="2" Margin="0,15,0,0">
                        <Grid>
                            <TextBlock Text="{Binding SelectedMap.Name}"
                                     FontWeight="SemiBold"
                                     Foreground="{StaticResource ForegroundWhiteBrush}"
                                       Visibility="{Binding IsHost, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                            <ComboBox
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding SelectedMap}"
                                ItemsSource="{Binding AvailableMaps}"
                                Style="{StaticResource SettingsComboBox}"
                                Visibility="{Binding IsHost, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Grid>

                        <!-- Settings ItemsControl with TemplateSelector -->
                        <ItemsControl ItemsSource="{Binding SelectedSettings}"
                                     ItemTemplateSelector="{StaticResource SettingTemplateSelector}"
                                     Margin="0,10,0,0">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Margin" Value="0,0,0,5"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- Footer with Start Button -->
        <Grid Grid.Row="2" Margin="0,8,0,0">

            <StackPanel HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                <Label Content="{Binding LobbyState}"
                       Foreground="{StaticResource ForegroundWhiteBrush}"
                       VerticalAlignment="Center"/>
            </StackPanel>
            
            <Button Command="{Binding StartMatchCommand}"
                    HorizontalAlignment="Right"
                    Style="{DynamicResource StartMatchButton}">

                <!-- Tag binding to control visual state through converter -->
                <Button.Tag>
                    <MultiBinding Converter="{StaticResource MatchButtonStateConverter}">
                        <Binding Path="IsMatchStarting" />
                        <Binding Path="IsWaitingForMatchOver" />
                        <Binding Path="CanStartMatch" />
                    </MultiBinding>
                </Button.Tag>
                
                <!-- Dynamic content based on state -->
                <Button.Content>
                    <TextBlock 
                        Text="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Converter={StaticResource ButtonStateToContentConverter}}"/>
                </Button.Content>
            </Button>
        </Grid>
        
    </Grid>
</UserControl>
