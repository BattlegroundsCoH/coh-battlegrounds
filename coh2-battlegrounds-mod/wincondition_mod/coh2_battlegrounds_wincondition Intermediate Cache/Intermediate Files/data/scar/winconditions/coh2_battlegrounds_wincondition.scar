import("ScarUtil.scar")
import("Fatalities/Fatalities.scar")

function WinCondition_GameOver(winningTeam, losingTeam)
	-- Set the winning team (this will fire win/loss events for each player).
	World_SetTeamWin(winningTeam)
	
	local winningPlayers = Team_GetPlayers(winningTeam)
	local losingPlayers = Team_GetPlayers(losingTeam)
	
	Fatality_Execute(winningPlayers, losingPlayers)
end

function WinCondition_Check()
	local results = {}

	-- Check every player on each team for ownership of the "annihilation_condition" entity.
	for i = 1, World_GetPlayerCount() do
		local player = World_GetPlayerAt(i)
		local team = Player_GetTeam(player)
	
		results[team] = results[team] or { surrender_count = 0, annihilation_condition_count = 0 }
		
		-- If any player on a team has surrendered, that team loses.
		if (Player_IsSurrendered(player)) then
			results[team].surrender_count = results[team].surrender_count + 1
		end
		
		-- If at least one player on a given team owns an "annihilation_condition" entity, then that team has not yet lost.
		if (Player_IsAlive(player)) then
			local entities = Player_GetEntities(player)
			for entityCount = 1, EGroup_CountSpawned(entities) do
				local entity = EGroup_GetSpawnedEntityAt(entities, entityCount)
				if (Entity_IsOfType(entity, "annihilation_condition")) then
					results[team].annihilation_condition_count = results[team].annihilation_condition_count + 1
					break
				end
			end
		end
	end
	
	-- Check if any team has lost.
	for team,result in pairs(results) do
		if (result.surrender_count > 0 or result.annihilation_condition_count == 0) then
			Rule_RemoveAll()
			
			local winningTeam = Team_GetEnemyTeam(team)
			local losingTeam = team

			WinCondition_GameOver(winningTeam, losingTeam)
		end
	end
end

local function WinCondition_Init()
	Rule_AddInterval(WinCondition_Check, 3)
end

Scar_AddInit(WinCondition_Init)