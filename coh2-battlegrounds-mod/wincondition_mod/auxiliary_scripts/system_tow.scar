g_towdebug = false;
------------------------------------------------------------
-- Battlegrounds Tow Profiles
------------------------------------------------------------
bgtow_data = {
    profiles = {
        { -- Zis-3 AT
            ebp = "zis%-3",
            type = "zis-3_at_gun",
            state = { name = "antitankgun_state", value = "towing" },
            off = {
                ["zis_6_transport_truck"] = -5,
                ["m5_halftrack_squad"] = -5,
                ["m3a1_scout_car_squad"] = -5.5
            },
        },
        { -- M42 AT gun
            ebp = "m1937_53-k%-45",
            type = "53k_45mm_atgun",
            state = { name = "antitankgun_state", value = "towing" },
            off = {
                ["zis_6_transport_truck"] = -3.5,
                ["m5_halftrack_squad"] = -3.5,
                ["m3a1_scout_car_squad"] = -4.5
            },
        },
        { -- B4
            ebp = "m1931_203mm",
            type = "b4_howtizer",
            off = {
                ["zis_6_transport_truck"] = -8.5,
                ["m5_halftrack_squad"] = -8.5,
            },
        },
        { -- ML-20
            ebp = "m1937_152mm",
            type = "ml_20_howitzer",
            off = {
                ["zis_6_transport_truck"] = -6.5,
                ["m5_halftrack_squad"] = -6.5,
            },
        },
        { -- Pak-40
            ebp = "pak40",
            type = "pak40_at_gun",
            state = { name = "antitankgun_state", value = "towing" },
            off = {
                ["250"] = -4.5,
                ["251"] = -6.5,
                ["opel_blitz"] = -6.5,
            },
        },
        { -- Pak-43
            ebp = "pak43",
            type = "pak43_at_gun",
            off = {
                ["250"] = -4.5,
                ["251"] = -6.5,
                ["opel_blitz"] = -6.5,
            },
        },
        { -- Lefh-18
            ebp = "howitzer_105mm",
            type = "fh18_howitzer",
            off = {
                ["250"] = -4.5,
                ["251"] = -6.5,
                ["opel_blitz"] = -6.5,
            },
        },
        -- Add more cases for UKF and AEF (OKW is covered by Wehrmacht units)
    },
}

------------------------------------------------------------
-- Battlegrounds Tow System
------------------------------------------------------------
__BGTOWObjects = {};
__BGTOWIndexer = 0;

function Battlegrounds_TowFromOffmap(transportSquad, towTarget)

    local sg_tow_transport = SGroup_FromSquad(transportSquad, "sg_tow_transport_offmap" .. __BGTOWIndexer);
    local sg_tow_target = SGroup_FromSquad(towTarget, "sg_tow_target_offmap" .. __BGTOWIndexer);
    __BGTOWIndexer = __BGTOWIndexer + 1;

    Cmd_InstantUpgrade( sg_tow_transport, bg_db.towing_upgrade );
    Cmd_InstantUpgrade( sg_tow_target, bg_db.towed_upgrade );

    Battlegrounds_TowAttach(transportSquad, towTarget);

end

function Battlegrounds_AETowAttach(executer, target)
    local success = false;
    if scartype(target) == ST_ENTITY then
        success = Battlegrounds_TowAttach(executer, Entity_GetSquad(target), offset);
    else
        success = Battlegrounds_TowAttach(executer, target, offset);
    end
    if not success then
        UI_CreateColouredSquadKickerMessage(Util_GetPlayerOwner(executer), executer, BG_LocString(24), 186, 48, 1, 0 );
    end
end

function Battlegrounds_GetTOWProfile(towEntityID, transportSquadID)
    local wbp = BP_GetName(Entity_GetBlueprint(towEntityID));
    local tbp = BP_GetName(Squad_GetBlueprint(transportSquadID));
    for _, this in pairs(bgtow_data.profiles) do
        if string.match(wbp, this.ebp) ~= nil or Entity_IsOfType(towEntityID, this.type) then
            for transport, off in pairs(this.off) do
                if string.match(tbp, transport) ~= nil then
                    return { offset = off, state = this.state };
                end
            end
            return nil;
        end
    end
    return nil;
end

function Battlegrounds_TowAttach(executer, target, offset)
    local syncwpn = Squad_GetSyncWeapon(target);
    local profile = {};
    if offset == nil then
        profile = Battlegrounds_GetTOWProfile(syncwpn, executer);
        if profile == nil then
            return false;
        end
    else
        profile.offset = offset;
    end
    local tow_data = {
        tow_transport = executer,
        tow_transport_id = Squad_GetGameID(executer),
        tow_target = syncwpn,
        tow_target_squad = target,
        tow_target_id = Squad_GetGameID(target),
        tow_offset = profile.offset,
        tow_state = profile.state,
    };
    Battlegrounds_HideCrew(target, true);
    local pos, dir = Battlegrounds_GetTowCoordinates(tow_data.tow_transport, nil, tow_data.tow_offset);
    Entity_SetPosition(tow_data.tow_target, pos);
    Entity_SetHeading(tow_data.tow_target, dir, false);
    if tow_data.state ~= nil then
        Entity_SetAnimatorState(tow_data.tow_target, tow_data.state.name, tow_data.state.value);
    end
    tow_data.delta = {
        tpos = Vec3Scar(pos),
        tdir = Vec3Scar(dir);
    }
    table.insert(__BGTOWObjects, tow_data);
    if not Rule_Exists(__BgUpdateTOW) then
        Rule_Add(__BgUpdateTOW);
    end
    return true;
end

function Battlegrounds_HideCrew(towed, hide)
    for i=0, Squad_Count(towed) - 1 do
        local e = Squad_EntityAt(towed, i);
        if not Entity_IsSyncWeapon(e) then
            Entity_VisHide( e, hide ); -- Hide the crew members
        end
    end
end

function Battlegrounds_TowDetach(executer)
    for i=1, #__BGTOWObjects do
        if __BGTOWObjects[i].tow_transport == executer then
            Battlegrounds_HideCrew(Entity_GetSquad(__BGTOWObjects[i].tow_target), false); -- Show crew
            Squad_WarpToPos(Entity_GetSquad(__BGTOWObjects[i].tow_target), __BGTOWObjects[i].delta.lpos:toscar()); -- Warp entire crew to position
            table.remove(__BGTOWObjects, i);
            break;
        end
    end
end

function Battlegrounds_TOWPosUpdate(transport, target, off, delta)
    local pos, dir = Battlegrounds_GetTowCoordinates(transport, target, off, delta);
    Entity_SetPosition(target, pos);
    Entity_SetHeading(target, dir, true);
end

function __BgUpdateTOW()
    if #__BGTOWObjects == 0 then
        Rule_RemoveMe();
    else
        for i, data in ipairs(__BGTOWObjects) do
            if not Squad_IsValid(data.tow_transport_id) then
                if Squad_IsValid(data.tow_target_id) then
                    Squad_RemoveUpgrade(Squad_FromWorldID(data.tow_target_id), bg_db.towed_upgrade);
                end
                table.remove(__BGTOWObjects, i);
                return;
            end
            if not Squad_IsValid(data.tow_target_id) then
                Squad_RemoveUpgrade(Squad_FromWorldID(data.tow_transport_id), bg_db.towing_upgrade);
                table.remove(__BGTOWObjects, i);
                return;
            end
            Battlegrounds_TOWPosUpdate(data.tow_transport, data.tow_target, data.tow_offset, data.delta);
            if data.state ~= nil then
                Entity_SetAnimatorState(data.tow_target, data.state.name, data.state.value);
            end
            if Squad_HasActiveCommand(data.tow_target_squad) then
                Command_Squad(Util_GetPlayerOwner(data.tow_target_squad), SGroup_FromSquad(data.tow_target_squad), SCMD_Stop, false);
            end
        end
    end
end

function Battlegrounds_GetTowCoordinates(transport, target, off, delta) -- This function can and should be optimized later
    local tow_transport_pos = Vec3Scar(Squad_GetPosition(transport));
    local tow_transport_dir = Vec3Scar(Squad_GetHeading(transport)):unit();
    local tow_target_pos = tow_transport_dir:mul(off):add(tow_transport_pos);
    if delta ~= nil and (not delta.tpos:eq(tow_transport_pos) or not delta.tdir:eq(tow_transport_dir)) then -- delta data is not nil and the position of the transport has changed
        local axis = tow_transport_dir:mul(off * 0.75):add(tow_transport_pos);
        local tow_target_end = Vec3Scar(Entity_GetHeading(target)):unit():mul(-off * 2.0):add(axis);
        local tow_transport_end = tow_transport_dir:mul(off * 2.0):add(axis);
        delta.ldir = axis:lookat(tow_target_end:towards(tow_transport_end, 0.125)):unit();
        delta.lpos = delta.ldir:mul(-off * 0.25):add(axis);
        delta.tpos = tow_transport_pos;
        delta.tdir = tow_transport_dir;
        return delta.lpos:toscar(), delta.ldir:toscar();
    elseif delta ~= nil then
        return delta.lpos:toscar(), delta.ldir:toscar(); -- Return last calculated position
    else
        return tow_target_pos:toscar(), tow_transport_dir:negate():toscar();
    end
end

------------------------------------------------------------
-- Battlegrounds TOW-System testing
------------------------------------------------------------

function _tow_test()

    local gotopos = Player_GetStartingPosition(Game_GetLocalPlayer());
    local startpos = Player_GetNearestMapEntry(Game_GetLocalPlayer(), gotopos);

    local tow_transport = Squad_CreateAndSpawnToward(BP_GetSquadBlueprint("142b113740474c82a60b0a428bd553d5:zis_6_transport_truck_bg"), Game_GetLocalPlayer(), 0, startpos, gotopos ) ;
    local tow_target = Squad_CreateAndSpawnToward(BP_GetSquadBlueprint("142b113740474c82a60b0a428bd553d5:m1931_203mm_b-4_howitzer_artillery_bg"), Game_GetLocalPlayer(), 0, startpos, gotopos ) ;

    local test_a = SGroup_FromSquad(tow_transport, "sg_tow_transport_test");

    Cmd_Move(test_a, gotopos, true);

    Battlegrounds_TowFromOffmap(tow_transport, tow_target);

    --_tow_test_distances();

end

function _tow_test_distances()

    -- The table containing test table
    local test_table = {
        --["142b113740474c82a60b0a428bd553d5:m1942_zis-3_76mm_at_gun_squad_bg"] = {
            --"142b113740474c82a60b0a428bd553d5:zis_6_transport_truck_bg",
            --"142b113740474c82a60b0a428bd553d5:m5_halftrack_squad_bg",
            --"142b113740474c82a60b0a428bd553d5:m3a1_scout_car_squad_bg",
        --},
        --["142b113740474c82a60b0a428bd553d5:m1937_53-k_45mm_at_gun_squad_bg"] = {
            --"142b113740474c82a60b0a428bd553d5:zis_6_transport_truck_bg",
            --"142b113740474c82a60b0a428bd553d5:m5_halftrack_squad_bg",
          --  "142b113740474c82a60b0a428bd553d5:m3a1_scout_car_squad_bg",
        --},
        ["142b113740474c82a60b0a428bd553d5:m1937_152mm_ml_20_artillery_bg"] = {
            "142b113740474c82a60b0a428bd553d5:zis_6_transport_truck_bg",
            "142b113740474c82a60b0a428bd553d5:m5_halftrack_squad_bg",
            --"142b113740474c82a60b0a428bd553d5:m3a1_scout_car_squad_bg",
        },
        --["142b113740474c82a60b0a428bd553d5:m1931_203mm_b-4_howitzer_artillery_bg"] = {
            --"142b113740474c82a60b0a428bd553d5:zis_6_transport_truck_bg",
            --"142b113740474c82a60b0a428bd553d5:m5_halftrack_squad_bg",
            --"142b113740474c82a60b0a428bd553d5:m3a1_scout_car_squad_bg",
        --}
    };

    -- The rangles to test
    local test_ranges = {
        --2.5,
        --3,
        --3.5,
        --4,
        --4.5,
        --5,
        -5.5,
        -6,
        -6.5,
        -7,
        -7.5,
        -8,
        -8.5,
        -9,
    };

    -- Position to use
    local pos = Player_GetStartingPosition(Player_FindFirstEnemyPlayer(Game_GetLocalPlayer()));
    local off = -72;

    -- Loop through the test table
    for weapon, transporter in pairs(test_table) do

        local wbp = BP_GetSquadBlueprint(weapon);

        for i, this in pairs(transporter) do

            local tbp = BP_GetSquadBlueprint(this);

            for _, r in pairs(test_ranges) do

                local spawn = Util_ScarPos(pos.x, pos.y, pos.z + off);
                local head = Util_ScarPos(spawn.x  + 5, spawn.y, spawn.z);

                local tow_transport = Squad_CreateAndSpawnToward(tbp, Game_GetLocalPlayer(), 0, spawn, head ) ;
                local tow_target = Squad_CreateAndSpawnToward(wbp, Game_GetLocalPlayer(), 0, spawn, head ) ;

                Battlegrounds_TowAttach(tow_transport, tow_target, r);

                off = off + 16.0;

                HintMouseover_Add(LOC("Distance = " .. r), SGroup_Single(SGroup_CreateIfNotFound("sg_testtow"..r), tow_transport), 3, false);

            end

        end

    end

end
