function BG_CreateAndDisplayGameOverScreenOverride(locplayer, callback, victory)

    -- Disable other UI
    Taskbar_SetVisibility(false);
    BGUI_HideAll();

    -- Disable camera input
    Camera_SetInputEnabled(false);

    -- Reveral FOW
    FOW_RevealAll();

    -- Goto enemy base?
    -- Make defeated player units retreat?

    -- Get ref player ID
    local refplayerID = BG_GetPlayerID(locplayer);

    -- Background with and height
    local bkwidth = 890;
    local bkheight = 726;

    -- The position to use
    local goverpos = UI_Centre(-(bkwidth / 2.0), -(bkheight / 2.0));

    -- Create root
    bg_gameoverscreen = RootPanel();
    bg_gameoverscreen:setPos(UI_UnpackPosition(goverpos));

    -- Create background
    local gameover_bkg = Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_background", bkwidth, bkheight, 0, 0);
    bg_gameoverscreen:add(gameover_bkg);

    -- Create company title background
    local company_title_bkg = Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_data_frame", 308, 63, UI_CentreAlignWidth(308, bkwidth), -36);
    bg_gameoverscreen:add(company_title_bkg);

    -- Create company title
    local company_title_label = Label(Util_CreateLocString(_bg_playerData[refplayerID].company.name));
    company_title_label:setBounds(UI_CentreAlignWidth(308, bkwidth) + UI_CentreAlignWidth(274, 308), -28, 274, 42);
    company_title_label:setFontSize(24.0);
    company_title_label:setColor(Color.White);
    company_title_label:setHorizontalAlignment(LAH_Center);
    bg_gameoverscreen:add(company_title_label);

    -- Create gameove close button background
    local company_close_bkg = Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_data_frame", 308, 63, UI_CentreAlignWidth(308, bkwidth), bkheight - 34);
    bg_gameoverscreen:add(company_close_bkg);

    -- Create gameove close button
    bg_gameover_close_button = Button(Util_CreateLocString("Return to Lobby"), "ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_close_button");
    bg_gameover_close_button:setBounds(UI_CentreAlignWidth(308, bkwidth) + UI_CentreAlignWidth(268, 308), bkheight - 20, 268, 28);
    bg_gameover_close_button:setCallback(callback);
    bg_gameoverscreen:add(bg_gameover_close_button);

    -- The state of the gameover (victory or defeat)
    local stateText = nil;

    -- If victory
    if victory then
        stateText = "Victory";
    else -- else defeat
        stateText = "Defeat";
    end

    -- Create victory label
    local game_state_label = Label(Util_CreateLocString(stateText));
    game_state_label:setBounds(UI_CentreAlignWidth(204, bkwidth), 24, 204, 58);
    game_state_label:setFontSize(48.0);
    game_state_label:setColor(Color.White);
    game_state_label:setHorizontalAlignment(LAH_Center);
    bg_gameoverscreen:add(game_state_label);

    -- Create the rest of the stats
    BG_CreateGameOverStats(refplayerID, bg_gameoverscreen);

end

function BG_CreateGameOverStats(refPlayer, root)

    -- Update player stats
    BG_UpdatePlayerStats(refPlayer);

    -- LHS
    local lhsPanel = Panel();
    lhsPanel:setBounds(76, 142, 330, 100);
    lhsPanel:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_deathstat", 36, 36, 8, 6));
    lhsPanel:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_vehiclestat", 36, 36, 8, 50));

    -- Loss stat
    local company_loss_stat_label = Label(Util_CreateLocString(_bg_playerData[refPlayer].total_loss .. " Soldiers Lost"));
    company_loss_stat_label:setBounds(48, 8, 270, 42);
    company_loss_stat_label:setFontSize(18.0);
    company_loss_stat_label:setColor(Color(68, 68, 68));
    lhsPanel:add(company_loss_stat_label);

    -- Vehicle stat (Was supposed to be a damage stat)
    local company_damage_stat_label = Label(Util_CreateLocString(_bg_playerData[refPlayer].total_vloss .." Vehicles Lost"));
    company_damage_stat_label:setBounds(48, 52, 270, 42);
    company_damage_stat_label:setFontSize(18.0);
    company_damage_stat_label:setColor(Color(68, 68, 68));
    lhsPanel:add(company_damage_stat_label);

    -- RHS
    local rhsPanel = Panel();
    rhsPanel:setBounds(466, 142, 330, 100);
    rhsPanel:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_killstat", 36, 36, 8, 6));
    rhsPanel:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_deploystat", 36, 36, 8, 50));

    -- Loss stat
    local company_kill_stat_label = Label(Util_CreateLocString(_bg_playerData[refPlayer].total_kills .." Enemy Soldiers Killed"));
    company_kill_stat_label:setBounds(48, 8, 270, 42);
    company_kill_stat_label:setFontSize(18.0);
    company_kill_stat_label:setColor(Color(68, 68, 68));
    rhsPanel:add(company_kill_stat_label);

    -- Damage stat
    local company_deploy_stat_label = Label(Util_CreateLocString(_bg_playerData[refPlayer].total_deployed .." Units Deployed"));
    company_deploy_stat_label:setBounds(48, 52, 270, 42);
    company_deploy_stat_label:setFontSize(18.0);
    company_deploy_stat_label:setColor(Color(68, 68, 68));
    rhsPanel:add(company_deploy_stat_label);

    -- Add Panels
    root:add(lhsPanel);
    root:add(rhsPanel);

    -- Create specific stats
    BG_CreateLossStats(refPlayer, root);
    BG_CreateGainsStats(refPlayer, root);

end

function BG_CreatePagedStats(title, xOffset, viewTable)

    local pageWidth = 360;
    local pageHeight = 350;

    -- The panel representing the page
    local panelContainer = Panel();
    panelContainer:setBounds(xOffset, 290, pageWidth, pageHeight);
    panelContainer:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_data_frame2", 218, 60, UI_CentreAlignWidth(218, pageWidth), -24));

    -- The title label
    local pageTitleLabel = Label(title);
    pageTitleLabel:setBounds(UI_CentreAlignWidth(218, pageWidth) + UI_CentreAlignWidth(190, 218) + 2, -16, 190, 42);
    pageTitleLabel:setFontSize(24.0);
    pageTitleLabel:setColor(Color.White);
    pageTitleLabel:setHorizontalAlignment(LAH_Center);
    panelContainer:add(pageTitleLabel);

    -- The page-ish system:
    panelContainer:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_lr_bkg", 346, 37, UI_CentreAlignWidth(346, pageWidth), pageHeight - 40));

    -- The next page
    viewTable.next_page = function(tag)
        if viewTable.current_page + 1 <= viewTable.max_page then
            viewTable.current_page = viewTable.current_page + 1;
            viewTable.func(viewTable.player, viewTable.current_page);
            if viewTable.current_page == viewTable.max_page then
                viewTable.nextButton:setEnabled(false);
            end
            viewTable.previousButton:setEnabled(true);
        end
    end

    -- The previous page
    viewTable.previous_page = function(tag)
        if viewTable.current_page - 1 >= 1 then
            viewTable.current_page = viewTable.current_page - 1;
            viewTable.func(viewTable.player, viewTable.current_page);
            if viewTable.current_page == 1 then
                viewTable.previousButton:setEnabled(false);
            end
            viewTable.nextButton:setEnabled(true);
        end
    end

    viewTable.previousButton = Button(Util_CreateLocString(""), "ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_left_button");
    viewTable.previousButton:setBounds(UI_CentreAlignWidth(26, pageWidth) - 34, pageHeight - 32, 26, 23);
    viewTable.previousButton:setCallback(viewTable.previous_page);
    viewTable.previousButton:setEnabled(false);
    panelContainer:add(viewTable.previousButton);

    viewTable.nextButton = Button(Util_CreateLocString(""), "ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_right_button");
    viewTable.nextButton:setBounds(UI_CentreAlignWidth(26, pageWidth) + 34, pageHeight - 32, 26, 23);
    viewTable.nextButton:setCallback(viewTable.next_page);
    viewTable.nextButton:setEnabled(viewTable.current_page < viewTable.max_page);
    panelContainer:add(viewTable.nextButton);

    viewTable.pageLabel = Label(Util_CreateLocString(viewTable.current_page.."/"..viewTable.max_page));
    viewTable.pageLabel:setBounds(UI_CentreAlignWidth(68, pageWidth), pageHeight - 32, 68, 42);
    viewTable.pageLabel:setFontSize(12.0);
    viewTable.pageLabel:setColor(Color.White);
    viewTable.pageLabel:setHorizontalAlignment(LAH_Center);
    panelContainer:add(viewTable.pageLabel);

    -- Return the panel
    return panelContainer;

end

function BG_CreateUnitCardPanel(yOffset)

    -- Create the card
    local card = Panel();
    card:setBounds(0, yOffset, 348, 48);
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_unit_bkg", 348, 47, 0, 0));

    -- Return the card
    return card;

end

function BG_CreateLossStats(refPlayer, root)

    -- The loss data (For keeping track of which page and such we're on)
    _bg_gameoverLossContent = {
        player = refPlayer,
        func = BG_ShowLossPageUnits,
        current_page = 1,
        max_page = 1
    };

    -- The loss counter
    local counter = 1;

    if _bg_playerData[refPlayer].lossData == nil or #_bg_playerData[refPlayer].lossData.units_lost == 0 then
        -- TODO: Show a "No units lost" label
    else

        for k,v in pairs(_bg_playerData[refPlayer].lossData.units_lost) do

            v.show_page = _bg_gameoverLossContent.max_page;
            counter = counter + 1;

            if counter > 5 then
                counter = 1;
                _bg_gameoverLossContent.max_page = _bg_gameoverLossContent.max_page + 1;
            end

        end

    end

    -- Create and get the loss page
    local lossPage = BG_CreatePagedStats(Util_CreateLocString("Losses"), 64, _bg_gameoverLossContent);

    _bg_gameoverLossContent.container = Panel();
    _bg_gameoverLossContent.container:setBounds(8, 42, 350, 266);
    lossPage:add(_bg_gameoverLossContent.container);

    -- Add the loss page
    root:add(lossPage);

    -- Display the page
    BG_ShowLossPageUnits(refPlayer, 1);

end

function BG_ShowLossPageUnits(refPlayer, page)

    _bg_gameoverLossContent.container:clear();

    local offset = 0;

    for k,v in pairs(_bg_playerData[refPlayer].lossData.units_lost) do

        if v.show_page == page then
            BG_CreateLostUnitCard(_bg_gameoverLossContent.container, offset, v);
            offset = offset + 52;
        end

    end

end

function BG_CreateUnitData(card, data, swapIcons)

    -- Should veterancy and item be swapped?
    if swapIcons == nil then
        swapIcons = false;
    end

    -- Add symbol
    card:add(Icon(data.symbol, 36, 36, 6, 6));

    -- Keep track of xOffset
    local xOffset = 44;

    -- Add veterancy function
    local addVet = function()
        if (data.rank or 0) > 0 then
            card:add(Icon(BG_GetVStar(data.rank), 36, 22, xOffset, 12));
            xOffset = xOffset + 40;
        end
    end

    -- Add item function
    local addItem = function()
        if data.item_symbol ~= nil then
            card:add(Icon(data.item_symbol, 48, 16, xOffset, 16));
            xOffset = xOffset + 52;
        end
    end

    -- Should icons be swapped?
    if swapIcons then

        -- Add weapon symbol
        addItem();

        -- Add rank
        addVet();

    else

        -- Add rank
        addVet();

        -- Add weapon symbol
        addItem();

    end

    return xOffset;

end

function BG_CreateLostUnitCard(root, yOffset, unitData)

    -- Create basic card
    local card = BG_CreateUnitCardPanel(yOffset);

    -- Add symbols
    BG_CreateUnitData(card, unitData);

    local unit_id_label = Label(Util_CreateLocString("#"..unitData.company_id));
    unit_id_label:setBounds(348 - (4 * 14.0), 8, 50, 42);
    unit_id_label:setFontSize(18.0);
    unit_id_label:setColor(Color.White);
    unit_id_label:setHorizontalAlignment(LAH_Right);
    card:add(unit_id_label);

    root:add(card);

end

function BG_CreateGainsStats(refPlayer, root)

    -- The gains data (Same concept as for loss data)
    _bg_gameoverGainsContent = {
        player = refPlayer,
        func = BG_ShowGainsPageUnits,
        current_page = 1,
        max_page = 1
    };

    -- The page counter
    local counter = 1;
    local page = 1;

    -- Setup data
    if _bg_playerData[refPlayer].gainsData == nil or #_bg_playerData[refPlayer].gainsData == 0 then
        -- TODO: Display no gains text
    else
        for k,v in pairs(_bg_playerData[refPlayer].gainsData) do

            v.show_page = _bg_gameoverGainsContent.max_page;
            counter = counter + 1;

            if counter > 5 then
                counter = 1;
                _bg_gameoverGainsContent.max_page = _bg_gameoverGainsContent.max_page + 1;
            end

        end
    end

    -- The gains page
    local gainsPage = BG_CreatePagedStats(Util_CreateLocString("Gains"), 456, _bg_gameoverGainsContent);
    _bg_gameoverGainsContent.container = Panel();
    _bg_gameoverGainsContent.container:setBounds(8, 42, 350, 266);
    gainsPage:add(_bg_gameoverGainsContent.container);

    -- Add the gains page
    root:add(gainsPage);

    -- Display the page
    BG_ShowGainsPageUnits(refPlayer, 1);

end

function BG_ShowGainsPageUnits(refPlayer, page)

    _bg_gameoverGainsContent.container:clear();

    local offset = 0;

    for k,v in pairs(_bg_playerData[refPlayer].gainsData) do

        if v.show_page == page then
            if v.type == 1 then
                BG_CreateCapturedEquipmentCard(_bg_gameoverGainsContent.container, offset, v);
            elseif v.type == 2 then
                BG_CreatePickupCard(_bg_gameoverGainsContent.container, offset, v);
            else
                BG_CreateVeterancyCard(_bg_gameoverGainsContent.container, offset, v);
            end

            offset = offset + 52;
        end

    end

end

function BG_CreateCapturedEquipmentCard(root, yOffset, data)

    -- Create basic card
    local card = BG_CreateUnitCardPanel(yOffset);

    -- Add unit symbl
    card:add(Icon(data.symbol, 36, 36, 6, 6));

    -- Add captured symbols
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_captured_equipment", 32, 31, 42, 8));
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_inventory_item", 28, 28, 348 - 36, 12));

    -- Add card to root
    root:add(card);

end

function BG_CreatePickupCard(root, yOffset, data)

    -- Create basic card
    local card = BG_CreateUnitCardPanel(yOffset);
    local xOffset = BG_CreateUnitData(card, data);

    -- Add type icon
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_upgrade_pickup", 28, 35, 348 - 36, 6));

    -- Add card to root
    root:add(card);

end

function BG_CreateVeterancyCard(root, yOffset, data)

    -- Create basic card
    local card = BG_CreateUnitCardPanel(yOffset);
    local xOffset = BG_CreateUnitData(card, data, true);

    -- Add change arrow
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_gameover_vet_change", 24, 12, xOffset, 16));
    xOffset = xOffset + 32

    -- Add new vet
    card:add(Icon(BG_GetVStar(data.now), 36, 22, xOffset, 12));

    -- Add type icon
    card:add(Icon("ModIcons_6a0a13b89555402ca75b85dc30f5cb04_vstar_increase", 32, 32, 348 - 40, 8));

    -- Add card to root
    root:add(card);

end

function BG_CreateAndDisplayMultiplayerActionsScreenOverride(player)

    -- The position
    local overridePos = UI_BottomLeft(330, 346);

    -- Create root panel
    bg_overrideui = RootPanel();
    bg_overrideui:setPos(UI_UnpackPosition(overridePos));

    bg_vote_action_button = Button(Util_CreateLocString(""), "ModIcons_6a0a13b89555402ca75b85dc30f5cb04_mp_actions_override_button");
    bg_vote_action_button:setBounds(0, 0, 48, 48);
    bg_vote_action_button:setCallback(BG_OnVoteOverrideButtonClicked);

    bg_overrideui:add(bg_vote_action_button);

end

function BG_OnVoteButtonClocked(bttn)
    if bttn == DB_Button1 then
        Game_SendMessage(_bg_message_type_team_request_withdraw, Player_GetID(Game_GetLocalPlayer()));
    elseif bttn == DB_Button2 then
        Game_SendMessage(_bg_message_type_player_surrender, Player_GetID(Game_GetLocalPlayer()));
    end
end

function BG_OnVoteOverrideButtonClicked(tag)

    -- Set contents
    UI_MessageBoxSetText(LOC("Actions Dialog"), LOC("Here you can call for a vote to surrender to the enemy team or decide to withdraw your own company from the battle."));

    -- Set the buttons
    UI_MessageBoxSetButton(DB_Button1, LOC("Call for Surrender Vote."), LOC("This will call for a vote for the team to surrender."), "", true);
    UI_MessageBoxSetButton(DB_Button2, LOC("Withdraw from battle."), LOC("You will withdraw from battle. 15% of your deployed units will surrender."), "", true);
    UI_MessageBoxSetButton(DB_Button3, LOC("Close"), LOC("Close dialog."), "", true);

    -- Show the messagebox
    UI_MessageBoxShow(DC_Default, BG_OnVoteButtonClocked);

end

function BG_OnShowMatchErrorButtonClicked(bttn)

    -- Go to front end
    Misc_AbortToFE();

end

-- The 'override' for a 'fatal scar error'
function BG_CreateAndShowMatchError(title, message)

    -- Fix message
    if message == nil then
        message = title;
        title = BG_LocString(13);
    end

    -- Set the message box text
    UI_MessageBoxSetText(title, message);

    -- Add the close button
    UI_MessageBoxSetButton(DB_Close, BG_LocString(14), BG_LocString(15), "", true);

    -- Show the message box
    UI_MessageBoxShow(DC_Default, BG_OnShowMatchErrorButtonClicked);

end

___GUI_funyes = nil;
___GUI_funno = nil;
___GUI_funarg = nil;

function BG_ShowYesNoDialogOnResponse(bttn)
    if bttn == DB_Button1 then
        ___GUI_funyes(___GUI_funarg);
    else
        ___GUI_funno(___GUI_funarg);
    end
end

function BG_ShowYesNoDialog(title, message, yes_text, yes_tooltip, yes_func, no_text, no_tooltip, no_func, arg)

    -- Set the message box text
    UI_MessageBoxSetText(title, message);

    -- Add the close button
    UI_MessageBoxSetButton(DB_Button1, yes_text, yes_tooltip, "", true);
    UI_MessageBoxSetButton(DB_Button2, no_text, no_tooltip, "", true);

    -- BAD
    ___GUI_funyes = yes_func;
    ___GUI_funno = no_func;
    ___GUI_funarg = arg;

    -- Show the message box
    UI_MessageBoxShow(DC_Default, BG_ShowYesNoDialogOnResponse);

end
